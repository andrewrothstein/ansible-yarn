---
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: check for installation in {{ yarn_install_dir }}
  become: true
  stat:
    path: '{{ yarn_install_dir }}'
  changed_when: false
  register: yarn_binary

- when: not yarn_binary.stat.exists
  block:
    - name: downloading {{ yarn_tgz_url }}
      become: true
      become_user: root
      get_url:
        url: '{{ yarn_tgz_url }}'
        dest: '{{ yarn_tmp_tgz }}'
        checksum: '{{ yarn_checksum }}'
        mode: 0644
    - name: unarchiving {{ yarn_tmp_tgz }} to {{ yarn_parent_install_dir }}
      become: true
      become_user: root
      unarchive:
        remote_src: true
        src: '{{ yarn_tmp_tgz }}'
        dest: '{{ yarn_parent_install_dir }}'
        creates: '{{ yarn_install_dir }}'
  always:
    - name: rm {{ yarn_tmp_tgz }}
      become: true
      become_user: root
      file:
        path: '{{ yarn_tmp_tgz }}'
        state: absent

- name: linking {{ yarn_link_dir }} to {{ yarn_install_dir }}
  become: true
  become_user: root
  file:
    src: '{{ yarn_install_dir }}'
    dest: '{{ yarn_link_dir }}'
    state: link

- name: adding yarn bins to login shell PATH...
  become: true
  become_user: root
  with_items:
    - f: yarn.sh
      d: /etc/profile.d
  template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
    mode: '{{ item.m | default("0644") }}'
