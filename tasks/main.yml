---
- name: Installing andrewrothstein.unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Installing andrewrothstein.node
  ansible.builtin.include_role:
    name: andrewrothstein.node
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for installation in {{ yarn_install_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ yarn_install_dir }}'
  changed_when: false
  register: yarn_binary

- name: Downloading and installing yarn
  when: not yarn_binary.stat.exists
  block:
    - name: Downloading {{ yarn_tgz_url }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ yarn_tgz_url }}'
        dest: '{{ yarn_tmp_tgz }}'
        checksum: '{{ yarn_checksum }}'
        mode: '644'
    - name: Unarchiving {{ yarn_tmp_tgz }} to {{ yarn_parent_install_dir }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ yarn_tmp_tgz }}'
        dest: '{{ yarn_parent_install_dir }}'
        creates: '{{ yarn_install_dir }}'
  always:
    - name: Rm {{ yarn_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ yarn_tmp_tgz }}'
        state: absent

- name: Linking {{ yarn_link_dir }} to {{ yarn_install_dir }}
  become: true
  become_user: root
  with_items: '{{ yarn_exes }}'
  ansible.builtin.file:
    src: '{{ yarn_bin_dir }}/{{ item }}'
    dest: '{{ yarn_link_dir }}/{{ item }}'
    state: link
